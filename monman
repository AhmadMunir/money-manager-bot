#!/bin/bash
# MonMan Bot Launcher Script for Linux
# This script provides easy commands to manage the bot

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
CLI_LAUNCHER="$SCRIPT_DIR/cli_launcher.py"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Function to print colored output
print_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if Python and required modules are available
check_requirements() {
    if ! command -v python3 &> /dev/null; then
        print_error "Python 3 is not installed or not in PATH"
        exit 1
    fi
    
    if [ ! -f "$CLI_LAUNCHER" ]; then
        print_error "CLI launcher not found: $CLI_LAUNCHER"
        exit 1
    fi
}

# Show usage information
show_usage() {
    echo -e "${CYAN}MonMan Bot Launcher${NC}"
    echo "Usage: $0 [COMMAND] [OPTIONS]"
    echo ""
    echo "Commands:"
    echo "  start     - Start the bot"
    echo "  stop      - Stop the bot"
    echo "  restart   - Restart the bot"
    echo "  status    - Show bot status"
    echo "  logs      - Show bot logs"
    echo "  config    - Configure settings"
    echo "  menu      - Interactive menu"
    echo ""
    echo "Options:"
    echo "  -d, --daemon    - Run as daemon (background)"
    echo "  -f, --follow    - Follow logs in real-time"
    echo "  -n, --lines N   - Show N lines of logs (default: 100)"
    echo "  --log-level L   - Set log level (DEBUG/INFO/WARNING/ERROR/CRITICAL)"
    echo ""
    echo "Examples:"
    echo "  $0 start              # Start bot in foreground"
    echo "  $0 start --daemon     # Start bot as daemon"
    echo "  $0 logs --follow      # Follow logs in real-time"
    echo "  $0 logs --lines 50    # Show last 50 log lines"
    echo "  $0 restart --daemon   # Restart bot as daemon"
}

# Main script
main() {
    check_requirements
    
    if [ $# -eq 0 ]; then
        # No arguments, show interactive menu
        python3 "$CLI_LAUNCHER" menu
    else
        # Pass all arguments to CLI launcher
        python3 "$CLI_LAUNCHER" "$@"
    fi
}

# Handle special cases
case "$1" in
    -h|--help|help)
        show_usage
        exit 0
        ;;
    "")
        main "$@"
        ;;
    *)
        main "$@"
        ;;
esac
